{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\reactportfoliowebsite\\\\React Portfolio Website\\\\src\\\\components\\\\HomeBackground\\\\Earth\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef } from \"react\";\nimport { useFrame, useLoader } from \"@react-three/fiber\";\nimport { Stars } from \"@react-three/drei\";\nimport * as THREE from \"three\";\nimport EarthDayMap from '../EarthTextures/2k_earth_daymap.jpg';\nimport EarthClouds from \"../EarthTextures/2k_earth_clouds.jpg\"; // import EarthNightMap from \"../EarthTextures/2k_earth_nightmap.jpg\";\n\nimport EarthNormal from \"../EarthTextures/2k_earth_normal_map.jpg\";\nimport EarthSpecular from \"../EarthTextures/2k_earth_specular_map.jpg\";\nimport { TextureLoader } from \"three\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Earth(props) {\n  _s();\n\n  const [colorMap, normalMap, specularMap, cloudMap] = useLoader(TextureLoader, [EarthDayMap, EarthNormal, EarthSpecular, EarthClouds]);\n  const earthRef = useRef();\n  const cloudsRef = useRef();\n  useFrame(({\n    clock\n  }) => {\n    const elapsedTime = clock.getElapsedTime();\n    earthRef.current.rotation.y = elapsedTime / 20;\n    cloudsRef.current.rotation.y = elapsedTime / 25;\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"pointLight\", {\n      color: \"#f6f3ea\",\n      position: [2, 0, 5],\n      intensity: 1.2\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Stars, {\n      radius: 300,\n      depth: 60,\n      count: 20000,\n      factor: 7,\n      saturation: 0.5,\n      fade: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"mesh\", {\n      ref: cloudsRef,\n      position: [.7, -.3, 3],\n      children: [/*#__PURE__*/_jsxDEV(\"sphereGeometry\", {\n        args: [0.598, 32, 32]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"meshPhongMaterial\", {\n        map: cloudMap,\n        opacity: 0.4,\n        depthWrite: false,\n        transparent: true,\n        side: THREE.DoubleSide\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"mesh\", {\n      ref: earthRef,\n      position: [.7, -.3, 3],\n      children: [/*#__PURE__*/_jsxDEV(\"sphereGeometry\", {\n        args: [0.594, 30, 32]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"meshPhongMaterial\", {\n        specularMap: specularMap\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"meshStandardMaterial\", {\n        map: colorMap,\n        normalMap: normalMap,\n        metalness: 0.4,\n        roughness: 0.8\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Earth, \"H6XTCMW/CqDidM7ERb8GynLX2eI=\", false, function () {\n  return [useLoader, useFrame];\n});\n\n_c = Earth;\n\nvar _c;\n\n$RefreshReg$(_c, \"Earth\");","map":{"version":3,"sources":["C:/Users/Admin/Desktop/reactportfoliowebsite/React Portfolio Website/src/components/HomeBackground/Earth/index.js"],"names":["React","useRef","useFrame","useLoader","Stars","THREE","EarthDayMap","EarthClouds","EarthNormal","EarthSpecular","TextureLoader","Earth","props","colorMap","normalMap","specularMap","cloudMap","earthRef","cloudsRef","clock","elapsedTime","getElapsedTime","current","rotation","y","DoubleSide"],"mappings":"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","sourcesContent":["import React, { useRef } from \"react\";\nimport { useFrame, useLoader } from \"@react-three/fiber\";\nimport { Stars } from \"@react-three/drei\";\nimport * as THREE from \"three\";\n\nimport EarthDayMap from '../EarthTextures/2k_earth_daymap.jpg'\nimport EarthClouds from \"../EarthTextures/2k_earth_clouds.jpg\";\n// import EarthNightMap from \"../EarthTextures/2k_earth_nightmap.jpg\";\nimport EarthNormal from \"../EarthTextures/2k_earth_normal_map.jpg\";\nimport EarthSpecular from \"../EarthTextures/2k_earth_specular_map.jpg\";\n\n\n\nimport { TextureLoader } from \"three\";\n\nexport default function Earth(props) {\n  const [colorMap, normalMap, specularMap, cloudMap] = useLoader(\n    TextureLoader,\n    [EarthDayMap, EarthNormal, EarthSpecular, EarthClouds]\n  );\n\n  const earthRef = useRef();\n  const cloudsRef = useRef();\n\n  useFrame(({ clock }) => {\n    const elapsedTime = clock.getElapsedTime();\n    earthRef.current.rotation.y = elapsedTime / 20;\n    cloudsRef.current.rotation.y = elapsedTime / 25;\n  });\n\n  return (\n    <>\n      {/* <ambientLight intensity={1} /> */}\n      <pointLight color=\"#f6f3ea\" position={[2, 0, 5]} intensity={1.2} />\n      <Stars\n        radius={300}\n        depth={60}\n        count={20000}\n        factor={7}\n        saturation={0.5}\n        fade={true}\n      />\n      <mesh ref={cloudsRef} position={[.7, -.3, 3]}>\n        <sphereGeometry args={[0.598, 32, 32]} />\n        <meshPhongMaterial\n          map={cloudMap}\n          opacity={0.4}\n          depthWrite={false}\n          transparent={true}\n          side={THREE.DoubleSide}\n        />\n      </mesh>\n      <mesh ref={earthRef} position={[.7, -.3, 3]}>\n        <sphereGeometry args={[0.594, 30, 32]} />\n        <meshPhongMaterial specularMap={specularMap} />\n        <meshStandardMaterial\n          map={colorMap}\n          normalMap={normalMap}\n          metalness={0.4}\n          roughness={0.8}\n        />\n        {/* <OrbitControls\n          enableZoom={true}\n          enablePan={true}\n          enableRotate={true}\n          zoomSpeed={0.6}\n          panSpeed={0.5}\n          rotateSpeed={0.4}\n        /> */}\n      </mesh>\n    </>\n  );\n}"]},"metadata":{},"sourceType":"module"}